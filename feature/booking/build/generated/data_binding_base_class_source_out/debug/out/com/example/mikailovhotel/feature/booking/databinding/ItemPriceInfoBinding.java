// Generated by view binder compiler. Do not edit!
package com.example.mikailovhotel.feature.booking.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.mikailovhotel.feature.booking.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemPriceInfoBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView finalPrice;

  @NonNull
  public final TextView fuel;

  @NonNull
  public final TextView fuelHint;

  @NonNull
  public final TextView priceHint;

  @NonNull
  public final TextView service;

  @NonNull
  public final TextView serviceHint;

  @NonNull
  public final TextView tour;

  @NonNull
  public final TextView tourHint;

  private ItemPriceInfoBinding(@NonNull ConstraintLayout rootView, @NonNull TextView finalPrice,
      @NonNull TextView fuel, @NonNull TextView fuelHint, @NonNull TextView priceHint,
      @NonNull TextView service, @NonNull TextView serviceHint, @NonNull TextView tour,
      @NonNull TextView tourHint) {
    this.rootView = rootView;
    this.finalPrice = finalPrice;
    this.fuel = fuel;
    this.fuelHint = fuelHint;
    this.priceHint = priceHint;
    this.service = service;
    this.serviceHint = serviceHint;
    this.tour = tour;
    this.tourHint = tourHint;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemPriceInfoBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemPriceInfoBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_price_info, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemPriceInfoBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.final_price;
      TextView finalPrice = ViewBindings.findChildViewById(rootView, id);
      if (finalPrice == null) {
        break missingId;
      }

      id = R.id.fuel;
      TextView fuel = ViewBindings.findChildViewById(rootView, id);
      if (fuel == null) {
        break missingId;
      }

      id = R.id.fuel_hint;
      TextView fuelHint = ViewBindings.findChildViewById(rootView, id);
      if (fuelHint == null) {
        break missingId;
      }

      id = R.id.price_hint;
      TextView priceHint = ViewBindings.findChildViewById(rootView, id);
      if (priceHint == null) {
        break missingId;
      }

      id = R.id.service;
      TextView service = ViewBindings.findChildViewById(rootView, id);
      if (service == null) {
        break missingId;
      }

      id = R.id.service_hint;
      TextView serviceHint = ViewBindings.findChildViewById(rootView, id);
      if (serviceHint == null) {
        break missingId;
      }

      id = R.id.tour;
      TextView tour = ViewBindings.findChildViewById(rootView, id);
      if (tour == null) {
        break missingId;
      }

      id = R.id.tour_hint;
      TextView tourHint = ViewBindings.findChildViewById(rootView, id);
      if (tourHint == null) {
        break missingId;
      }

      return new ItemPriceInfoBinding((ConstraintLayout) rootView, finalPrice, fuel, fuelHint,
          priceHint, service, serviceHint, tour, tourHint);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
