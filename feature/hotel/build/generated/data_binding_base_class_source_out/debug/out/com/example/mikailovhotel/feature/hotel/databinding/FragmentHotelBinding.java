// Generated by view binder compiler. Do not edit!
package com.example.mikailovhotel.feature.hotel.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.core.widget.NestedScrollView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.swiperefreshlayout.widget.SwipeRefreshLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.denzcoskun.imageslider.ImageSlider;
import com.example.mikailovhotel.feature.hotel.R;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentHotelBinding implements ViewBinding {
  @NonNull
  private final SwipeRefreshLayout rootView;

  @NonNull
  public final TextView aboutHotel;

  @NonNull
  public final TextView address;

  @NonNull
  public final MaterialButton amenities;

  @NonNull
  public final TextView amenitiesSupportText;

  @NonNull
  public final MaterialButton applyButton;

  @NonNull
  public final NestedScrollView content;

  @NonNull
  public final TextView description;

  @NonNull
  public final MaterialButton excluded;

  @NonNull
  public final TextView excludedSupportText;

  @NonNull
  public final View firstSeparator;

  @NonNull
  public final TextView goldenScore;

  @NonNull
  public final ImageSlider imageSlider;

  @NonNull
  public final MaterialButton included;

  @NonNull
  public final TextView includedSupportText;

  @NonNull
  public final View initialHotelLayoutBackground;

  @NonNull
  public final TextView name;

  @NonNull
  public final TextView price;

  @NonNull
  public final TextView priceForIt;

  @NonNull
  public final RecyclerView recyclerViewHotel;

  @NonNull
  public final View secondHotelLayoutBackground;

  @NonNull
  public final View secondSeparator;

  @NonNull
  public final SwipeRefreshLayout swipeRefreshLayout;

  @NonNull
  public final View thirdHotelLayoutBackground;

  private FragmentHotelBinding(@NonNull SwipeRefreshLayout rootView, @NonNull TextView aboutHotel,
      @NonNull TextView address, @NonNull MaterialButton amenities,
      @NonNull TextView amenitiesSupportText, @NonNull MaterialButton applyButton,
      @NonNull NestedScrollView content, @NonNull TextView description,
      @NonNull MaterialButton excluded, @NonNull TextView excludedSupportText,
      @NonNull View firstSeparator, @NonNull TextView goldenScore, @NonNull ImageSlider imageSlider,
      @NonNull MaterialButton included, @NonNull TextView includedSupportText,
      @NonNull View initialHotelLayoutBackground, @NonNull TextView name, @NonNull TextView price,
      @NonNull TextView priceForIt, @NonNull RecyclerView recyclerViewHotel,
      @NonNull View secondHotelLayoutBackground, @NonNull View secondSeparator,
      @NonNull SwipeRefreshLayout swipeRefreshLayout, @NonNull View thirdHotelLayoutBackground) {
    this.rootView = rootView;
    this.aboutHotel = aboutHotel;
    this.address = address;
    this.amenities = amenities;
    this.amenitiesSupportText = amenitiesSupportText;
    this.applyButton = applyButton;
    this.content = content;
    this.description = description;
    this.excluded = excluded;
    this.excludedSupportText = excludedSupportText;
    this.firstSeparator = firstSeparator;
    this.goldenScore = goldenScore;
    this.imageSlider = imageSlider;
    this.included = included;
    this.includedSupportText = includedSupportText;
    this.initialHotelLayoutBackground = initialHotelLayoutBackground;
    this.name = name;
    this.price = price;
    this.priceForIt = priceForIt;
    this.recyclerViewHotel = recyclerViewHotel;
    this.secondHotelLayoutBackground = secondHotelLayoutBackground;
    this.secondSeparator = secondSeparator;
    this.swipeRefreshLayout = swipeRefreshLayout;
    this.thirdHotelLayoutBackground = thirdHotelLayoutBackground;
  }

  @Override
  @NonNull
  public SwipeRefreshLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentHotelBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentHotelBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_hotel, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentHotelBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.about_hotel;
      TextView aboutHotel = ViewBindings.findChildViewById(rootView, id);
      if (aboutHotel == null) {
        break missingId;
      }

      id = R.id.address;
      TextView address = ViewBindings.findChildViewById(rootView, id);
      if (address == null) {
        break missingId;
      }

      id = R.id.amenities;
      MaterialButton amenities = ViewBindings.findChildViewById(rootView, id);
      if (amenities == null) {
        break missingId;
      }

      id = R.id.amenities_support_text;
      TextView amenitiesSupportText = ViewBindings.findChildViewById(rootView, id);
      if (amenitiesSupportText == null) {
        break missingId;
      }

      id = R.id.apply_button;
      MaterialButton applyButton = ViewBindings.findChildViewById(rootView, id);
      if (applyButton == null) {
        break missingId;
      }

      id = R.id.content;
      NestedScrollView content = ViewBindings.findChildViewById(rootView, id);
      if (content == null) {
        break missingId;
      }

      id = R.id.description;
      TextView description = ViewBindings.findChildViewById(rootView, id);
      if (description == null) {
        break missingId;
      }

      id = R.id.excluded;
      MaterialButton excluded = ViewBindings.findChildViewById(rootView, id);
      if (excluded == null) {
        break missingId;
      }

      id = R.id.excluded_support_text;
      TextView excludedSupportText = ViewBindings.findChildViewById(rootView, id);
      if (excludedSupportText == null) {
        break missingId;
      }

      id = R.id.first_separator;
      View firstSeparator = ViewBindings.findChildViewById(rootView, id);
      if (firstSeparator == null) {
        break missingId;
      }

      id = R.id.golden_score;
      TextView goldenScore = ViewBindings.findChildViewById(rootView, id);
      if (goldenScore == null) {
        break missingId;
      }

      id = R.id.image_slider;
      ImageSlider imageSlider = ViewBindings.findChildViewById(rootView, id);
      if (imageSlider == null) {
        break missingId;
      }

      id = R.id.included;
      MaterialButton included = ViewBindings.findChildViewById(rootView, id);
      if (included == null) {
        break missingId;
      }

      id = R.id.included_support_text;
      TextView includedSupportText = ViewBindings.findChildViewById(rootView, id);
      if (includedSupportText == null) {
        break missingId;
      }

      id = R.id.initial_hotel_layout_background;
      View initialHotelLayoutBackground = ViewBindings.findChildViewById(rootView, id);
      if (initialHotelLayoutBackground == null) {
        break missingId;
      }

      id = R.id.name;
      TextView name = ViewBindings.findChildViewById(rootView, id);
      if (name == null) {
        break missingId;
      }

      id = R.id.price;
      TextView price = ViewBindings.findChildViewById(rootView, id);
      if (price == null) {
        break missingId;
      }

      id = R.id.price_for_it;
      TextView priceForIt = ViewBindings.findChildViewById(rootView, id);
      if (priceForIt == null) {
        break missingId;
      }

      id = R.id.recycler_view_hotel;
      RecyclerView recyclerViewHotel = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewHotel == null) {
        break missingId;
      }

      id = R.id.second_hotel_layout_background;
      View secondHotelLayoutBackground = ViewBindings.findChildViewById(rootView, id);
      if (secondHotelLayoutBackground == null) {
        break missingId;
      }

      id = R.id.second_separator;
      View secondSeparator = ViewBindings.findChildViewById(rootView, id);
      if (secondSeparator == null) {
        break missingId;
      }

      SwipeRefreshLayout swipeRefreshLayout = (SwipeRefreshLayout) rootView;

      id = R.id.third_hotel_layout_background;
      View thirdHotelLayoutBackground = ViewBindings.findChildViewById(rootView, id);
      if (thirdHotelLayoutBackground == null) {
        break missingId;
      }

      return new FragmentHotelBinding((SwipeRefreshLayout) rootView, aboutHotel, address, amenities,
          amenitiesSupportText, applyButton, content, description, excluded, excludedSupportText,
          firstSeparator, goldenScore, imageSlider, included, includedSupportText,
          initialHotelLayoutBackground, name, price, priceForIt, recyclerViewHotel,
          secondHotelLayoutBackground, secondSeparator, swipeRefreshLayout,
          thirdHotelLayoutBackground);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
